name: Template CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-template:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: webapp/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('webapp/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Download Go dependencies
      run: go mod download
    
    - name: Generate OpenAPI code
      run: make api-codegen
    
    - name: Run Go tests
      run: make test
    
    - name: Install Node dependencies
      run: cd webapp && npm ci
    
    - name: Build frontend
      run: cd webapp && npm run build
    
    - name: Build binary
      run: make build
    
    - name: Test setup script
      run: |
        # Create a temporary directory for testing
        mkdir -p /tmp/template-test
        cp -r . /tmp/template-test/
        cd /tmp/template-test
        
        # Remove git directory to simulate fresh clone
        rm -rf .git
        
        # Test the setup script (non-interactive mode would need to be added)
        echo "Setup script exists and is executable"
        test -x ./setup-template.sh
    
    - name: Verify template structure
      run: |
        # Check that essential template files exist
        test -f setup-template.sh
        test -f TEMPLATE-README.md
        test -f .github/template.yml
        test -f Makefile
        test -f go.mod
        test -f api/openapi-spec.yaml
        test -d webapp/src
        test -f sample/config.yaml
        echo "âœ… All essential template files found"
